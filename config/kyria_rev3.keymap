/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
};

&lt {
    tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_caps-word {
            timeout-ms = <50>;
            key-positions = <24 39>;
            layers = <0>;
            bindings = <&caps_word>;
        };
    };
};

#define QWE 0
#define GRA 1
#define SYM 2
#define NAV 3
#define NUM 4
#define GAM 5

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp TAB       &kp Q &kp W &kp E &kp R &kp T                                             &kp Y &kp U  &kp I     &kp O   &kp P    &kp TAB
            &mt LCTRL ESC &kp A &kp S &kp D &kp F &kp G                                             &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL ENTER
            &kp LSHFT     &kp Z &kp X &kp C &kp V &kp B &kp LC(LSHFT) &kp F5        &kp F11 &kp DEL &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT FSLH
                                &kp C_MUTE &kp LALT &kp SPACE &mo SYM &kp LGUI      &kp TAB &mo NAV &lt NUM SPACE &kp BSPC &none
            >;

           sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        graphite_layer {
            bindings = <
            &kp TAB       &kp B &kp L &kp D &kp W &kp Z                                             &kp SQT &kp F &kp O   &kp U     &kp J     &kp TAB
            &mt LCTRL ESC &kp N &kp R &kp T &kp S &kp G                                             &kp Y   &kp H &kp A   &kp E     &kp I     &mt RCTRL ENTER
            &kp LSHFT     &kp Q &kp X &kp M &kp C &kp V &kp LC(LSHFT) &kp F5        &kp F11 &kp DEL &kp K   &kp P &kp DOT &kp MINUS &kp COMMA &mt RSHFT FSLH
                                &kp C_MUTE &kp LALT &kp SPACE &mo SYM &kp LGUI      &kp TAB &mo NAV &lt NUM SPACE &kp BSPC &none
            >;

           sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbols_layer {
            bindings = <
            &trans &kp BSLH  &kp SQT   &kp DQT   &kp PRCNT  &kp QMARK                                    &kp EXCL &kp RBKT &kp LBKT &kp GRAVE &kp COLON &trans
            &trans &kp CARET &kp EQUAL &kp UNDER &kp DOLLAR &kp ASTRK                                    &kp AT   &kp RBRC &kp LBRC &kp TILDE &kp SEMI  &trans
            &trans &kp LT    &kp PIPE  &kp MINUS &kp GT     &kp FSLH  &trans &trans    &trans    &trans  &kp PLUS &kp RPAR &kp LPAR &kp HASH  &kp AMPS  &trans
                                       &trans    &trans     &trans    &trans &trans    &kp COMMA &kp DOT &trans &kp DEL &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        navigation_layer {
            bindings = <
            &trans &bootloader  &none        &none        &none        &tog GRA                                        &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &none     &bootloader &none
            &trans &none        &none        &none        &none        &tog GAM                                        &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT &kp LG(L)   &trans
            &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans        &trans &trans &bt BT_CLR &kp C_BRI_DN &kp C_BRI_UP &none     &none       &trans
                                                               &trans &trans &trans &trans &trans        &trans &trans &trans &kp DEL &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN &inc_dec_kp PG_UP PG_DN>;
        };

        numbers_layer {
            bindings = <
            &trans &kp F1 &kp F4 &kp F7 &kp F10 &kp F13                                     &kp FSLH &kp N7 &kp N8 &kp N9 &kp MINUS &trans
            &trans &kp F2 &kp F5 &kp F8 &kp F11 &kp F14                                     &kp SEMI &kp N4 &kp N5 &kp N6 &kp PLUS  &trans
            &trans &kp F3 &kp F6 &kp F9 &kp F12 &kp F15 &trans &trans         &trans &trans &kp DOT  &kp N1 &kp N2 &kp N3 &kp N0    &trans
                                   &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
            >;

           sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        gaming_layer {
            bindings = <
            &kp TAB   &kp T &kp Q &kp W &kp E &kp R                                     &kp Y &kp U  &kp I     &kp O   &kp P    ESC
            &kp LCTRL &kp G &kp A &kp S &kp D &kp F                                     &kp H &kp J  &kp K     &kp L   &kp SEMI ENTER
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B  &kp LALT &kp F1      &kp F2 &kp F3 &kp N &kp M  &kp COMMA &kp DOT &kp FSLH ENTER
                         &none &kp LCTRL &kp SPACE &mo SYM  &kp LGUI      &kp F4 &mo NAV &lt NUM SPACE &kp BSPC &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // example_layer {
        //     bindings = <
        //     &trans &trans &trans &trans &trans &trans                                    &trans &trans &trans &trans &trans &trans
        //     &trans &trans &trans &trans &trans &trans                                    &trans &trans &trans &trans &trans &trans
        //     &trans &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
        //                          &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
        //     >;

        //     sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        // };
    };
};
